version: 2.1
orbs:
  codecov: codecov/codecov@3.2.4

jobs:
  build-and-test:
    docker:
      - image: cimg/rust:1.66.1
        environment:
          RUSTFLAGS: "-D warnings"
      - image: cimg/postgres:14.0
        environment:
          POSTGRES_USER: $DB_USER
          POSTGRES_PASSWORD: $DB_PASSWORD
          POSTGRES_DB: $DB_NAME
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install gettext-base
      - run: envsubst < ./.env.test > ./.env
      - run: echo ./.env
      - run:
          name: Install formatter
          command: rustup component add rustfmt
      - run:
          name: Formatting
          command: cargo fmt --all -- --check
      - run: sudo apt-get install libpq-dev -y
      - run: cargo install diesel_cli --no-default-features --features postgres
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - run:
          name: Cache permission
          command: |
            sudo chown -R $(whoami):$(id -ng) /home/circleci/.cargo/bin/cargo
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets
          command: cargo build
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Install Clippy
          command: rustup component add clippy
      - run:
          name: Linting
          command: cargo clippy -- -D warnings
      - run:
          name: Run all tests
          command: cargo test

  security:
    docker:
      - image: cimg/rust:1.66.1
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - v1-cargo-audit-{{ arch }}
      - run:
          name: Install dependency auditing tool
          command: cargo install cargo-audit
      - save_cache:
          paths:
            - /usr/local/cargo
          key: v1-cargo-audit-{{ arch }}
      - run:
          name: Check for known security issues in dependencies
          command: cargo audit

  coverage:
    machine: true
    steps:
      - checkout
      - run:
          name: Coverage with docker
          command: docker run --security-opt seccomp=unconfined -v "${PWD}:/volume" xd009642/tarpaulin cargo tarpaulin --ignore-tests -o xml --output-dir coverage
      - codecov/upload:
          file: "./coverage/cobertura.xml"
workflows:
  build-test:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - coverage:
          requires:
            - build-and-test
          filters:
            tags:
              only: /.*/

      - security:
          filters:
            tags:
              only: /.*/
